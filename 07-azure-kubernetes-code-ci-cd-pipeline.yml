trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  vmImageName: "ubuntu-latest"

# Stage 1
# Build Docker Image
# Publish the K8S Files
stages:
  - stage: Build
    displayName: Build image
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'nodejs-microservices-docker-hub'
            repository: 'msinfoorigin/nodejs-microservices-devops'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'
            tags: '$(tag)'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: 'manifests'
            artifact: 'manifests'
            publishLocation: 'pipeline'
#        - task: CopyFiles@2
#          inputs:
#            SourceFolder: '$(System.DefaultWorkingDirectory)'
#            Contents: '**/*.yaml'
#            TargetFolder: '$(Build.ArtifactStagingDirectory)'
#        - task: PublishBuildArtifacts@1
#          inputs:
#            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
#            ArtifactName: 'manifests'
#            publishLocation: 'Container'
  - stage: Deploy
    displayName: Deploy image
    jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadPipelineArtifact@2
              inputs:
                artifactName: 'manifests'
                downloadPath: '$(System.ArtifactsDirectory)/manifests'
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: 'createSecret'
                kubernetesServiceConnection: 'azure-kubernetes-connection'
                namespace: 'default'
                secretType: 'dockerRegistry'
                secretName: 'imagePullSecret'
                dockerRegistryEndpoint: 'nodejs-microservices-docker-hub'
            - task: KubernetesManifest@0
              inputs:
                action: 'deploy'
                kubernetesServiceConnection: 'azure-kubernetes-connection'
                namespace: 'default'
                manifests: |
                  $(System.ArtifactsDirectory)/manifests/deployment.yml
                  $(System.ArtifactsDirectory)/manifests/service.yml
                containers: |
                  msinfoorigin/nodejs-microservices-devops:$(tag)
                imagePullSecrets: $(imagePullSecret)
# Stage 2
# Download the K8S Files
# Deploy to K8S Cluster with Docker Image
